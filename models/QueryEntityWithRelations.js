"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * CrudSQL API
 * A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models CrudSQL provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger documentation - Multiple database support (SQL & NoSQL)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: taqi@mobix.biz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.QueryEntityWithRelationsToJSONTyped = exports.QueryEntityWithRelationsToJSON = exports.QueryEntityWithRelationsFromJSONTyped = exports.QueryEntityWithRelationsFromJSON = exports.instanceOfQueryEntityWithRelations = void 0;
/**
 * Check if a given object implements the QueryEntityWithRelations interface.
 */
function instanceOfQueryEntityWithRelations(value) {
    return true;
}
exports.instanceOfQueryEntityWithRelations = instanceOfQueryEntityWithRelations;
function QueryEntityWithRelationsFromJSON(json) {
    return QueryEntityWithRelationsFromJSONTyped(json, false);
}
exports.QueryEntityWithRelationsFromJSON = QueryEntityWithRelationsFromJSON;
function QueryEntityWithRelationsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'mainEntity': json['mainEntity'] == null ? undefined : json['mainEntity'],
        'relations': json['relations'] == null ? undefined : json['relations'],
    };
}
exports.QueryEntityWithRelationsFromJSONTyped = QueryEntityWithRelationsFromJSONTyped;
function QueryEntityWithRelationsToJSON(json) {
    return QueryEntityWithRelationsToJSONTyped(json, false);
}
exports.QueryEntityWithRelationsToJSON = QueryEntityWithRelationsToJSON;
function QueryEntityWithRelationsToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'mainEntity': value['mainEntity'],
        'relations': value['relations'],
    };
}
exports.QueryEntityWithRelationsToJSONTyped = QueryEntityWithRelationsToJSONTyped;
